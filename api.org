#+title: tax api documentation

all tables will also have "created" and "updated" fields not shown
here

[[./schema.png]]

* general format of all successful responses

#+begin_src json
  {
    "slice, aka table": {
      "record id": {
        "id": "record id",
        "column name": "column value",
        "another column name": "another column value"
      }
    }
  }
#+end_src

* "king" == "user"

"user" is a reserved word in psql, which needs to be quoted. since
this project is generating sql with libraries, it uses "king" to avoid
having to generate sql with quotes in it.

* king authentication/authorization

** all endpoints that require authentication

all endpoints that require a king to be logged in

#+begin_src verb
  http/1.1 401 unauthorized
  content-type: application/json

  {
    "message": "authentication required"
  }
#+end_src

** all endpoints that require authorization

all endpoints that require authentication and the current king does
not have the correct role(s) or permission(s).

#+begin_src verb
  http/1.1 403 forbidden
  content-type: application/json

  {
    "message": "forbidden"
  }
#+end_src

* session

** generate a csrf token

  + require authentication: false

*** request

#+begin_src verb
  get /api/csrf
#+end_src

*** response

#+begin_src verb
  http/1.1 200 ok
  set-cookie: csrf_token=csrf_token;
#+end_src

* king

** create, sign up an account

*** request

  + require authentication: true
  + require authorization: false

#+begin_src verb
  post /api/king
  content-type: application/json

  {
      "email": "john.smith@example.com",
      "nick": "johnsmith",
      "password": "secret password",
  }
#+end_src

*** response

**** success

#+begin_src verb
  http/1.1 201 created
  content-type: application/json

  {
      "king": {
          "1": {
              "id": 1,
              "email": "john.smith@example.com",
              "nick": "johnsmith",
              "theme_id": 1
          }
      }
  }
#+end_src

**** failures

***** missing required fields

#+begin_src verb
  http/1.1 400 bad request
  content-type: application/json

  {
      "message": "missing required fields",
      "errors": {
          "email": "email is required",
          "nick": "nick is required"
      }
  }
#+end_src

***** validation errors

#+begin_src verb
  http/1.1 422 unprocessable entity
  content-type: application/json

  {
      "message": "bad request",
      "errors": {
          "email": "invalid email",
          "nick": "nick must have at least 1 character",
          "name": "name must have at least 1 character"
      }
  }
#+end_src

***** conflict

#+begin_src verb
  http/1.1 409 conflict
  content-type: application/json

  {
      "message": "account conflict",
      "errors": {
          "email": "email is taken",
          "nick": "nick is taken"
      }
  }
#+end_src

** read current king

  + require authentication: false
  + require authorization: false

*** request

#+begin_src verb
  get /api/king/current
#+end_src

*** response

**** when logged in

#+begin_src verb
  http/1.1 200 ok
  content-type: application/json

  {
      "king": {
          "1": {
              "id": 1,
              "email": "john.smith@example.com",
              "nick": "johnsmith",
              "theme_id": 1
          }
      }
  }
#+end_src

**** when anonymous

#+begin_src verb
  http/1.1 200 ok
  content-type: application/json

  {
      "king": null
  }
#+end_src

** update king

  + require authentication: true
  + require authorization: true

*** request

  + all fields are optional

#+begin_src verb
  put /api/king/current
  content-type: application/json

  {
      "email": "john.smith@example.com",
      "nick": "johnsmith",
      "password": "secret password",
      "theme_id": 2
  }
#+end_src

*** response

**** success

#+begin_src verb
  http/1.1 200 ok
  content-type: application/json

  {
      "king": {
          "1": {
              {
                  "id": 1
                  "email": "john.smith2@example.com",
                  "nick": "johnsmith2",
                  "password": "secret password2",
                  "theme_id": 1
              }
          }
      }
  }
#+end_src

**** failures

***** validation errors

#+begin_src verb
  http/1.1 422 unprocessable entity
  content-type: application/json

  {
      "message": "bad request",
      "errors": {
          "email": "invalid email",
          "nick": "nick must have at least 1 character",
          "email": "email must have at least 1 character",
          "theme_id": "theme_id must be an existing theme's id"
      }
  }
#+end_src

***** account conflict

#+begin_src verb
  http/1.1 409 conflict
  content-type: application/json

  {
      "message": "account conflict",
      "errors": {
          "email": "email is taken",
          "nick": "nick is taken"
      }
  }
#+end_src

** delete a king

  + require authentication: true
  + require authorization: true

*** request

#+begin_src verb
  delete /api/king/
#+end_src

*** response

**** success
#+begin_src verb
  http/1.1 200 ok

  {
      "king": {
          "1": null
      }
  }
#+end_src
